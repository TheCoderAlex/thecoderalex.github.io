<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Heap - 标签 - 好好学习</title>
    <link>https://alextang.top/tags/heap/</link>
    <description>Heap - 标签 - 好好学习</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>alextang@sdu.edu.cn (alextang)</managingEditor>
      <webMaster>alextang@sdu.edu.cn (alextang)</webMaster><lastBuildDate>Tue, 12 Dec 2023 15:05:40 &#43;0800</lastBuildDate><atom:link href="https://alextang.top/tags/heap/" rel="self" type="application/rss+xml" /><item>
  <title>Fastbin Attack</title>
  <link>https://alextang.top/articles/2023/12/fastbin_attack/</link>
  <pubDate>Tue, 12 Dec 2023 15:05:40 &#43;0800</pubDate>
  <author>alextang</author>
  <guid>https://alextang.top/articles/2023/12/fastbin_attack/</guid>
  <description><![CDATA[关于Fastbin机制 在Glibc 2.25及之前的版本中，如果free的chunk大小小于get_max_fast()，也就是全局变量glo]]></description>
</item>
<item>
  <title>堆溢出利用</title>
  <link>https://alextang.top/articles/2023/12/heap_overflow/</link>
  <pubDate>Mon, 11 Dec 2023 17:06:13 &#43;0800</pubDate>
  <author>alextang</author>
  <guid>https://alextang.top/articles/2023/12/heap_overflow/</guid>
  <description><![CDATA[Heap Overflow 堆溢出的概念其实和栈溢出、缓冲区溢出的概念非常相似，而且就连利用方式也非常相似，因为chunk之间是连续的。那么只要有read或者get]]></description>
</item>
<item>
  <title>堆基础</title>
  <link>https://alextang.top/articles/2023/12/heap_intro/</link>
  <pubDate>Thu, 07 Dec 2023 19:31:34 &#43;0800</pubDate>
  <author>alextang</author>
  <guid>https://alextang.top/articles/2023/12/heap_intro/</guid>
  <description><![CDATA[本节内容基于Glibc 2.25版本 什么是堆 堆（chunk）内存是一种允许程序在运行过程中动态分配和使用的内存区域。相比较于栈内存和全局内存，]]></description>
</item>
</channel>
</rss>
